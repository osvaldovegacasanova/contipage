---
import Layout from "./Layout.astro";
import Container from "../components/shared/Container.astro";
import SubTitle from "../components/shared/SubTitle.astro";

export interface Props {
  title: string;
  description?: string;
  pubDate?: string;
  updatedDate?: string;
  heroImage?: string;
  author?: string;
}

const { title, description, pubDate, updatedDate, heroImage, author } = Astro.props as Props;

const siteOrigin = Astro.url?.origin ?? '';
const canonicalUrl = Astro.url?.href ?? '';
const resolvedHero = heroImage
  ? (heroImage.startsWith('http') ? heroImage : `${siteOrigin}${heroImage}`)
  : undefined;

const breadcrumb = [
  { name: 'Inicio', item: `${siteOrigin}/` },
  { name: 'Blog', item: `${siteOrigin}/blog` },
  { name: title, item: canonicalUrl },
];

const articleLd = {
  '@context': 'https://schema.org',
  '@type': 'Article',
  headline: title,
  description: description,
  datePublished: pubDate ? new Date(pubDate).toISOString() : undefined,
  dateModified: (updatedDate ?? pubDate) ? new Date(updatedDate ?? pubDate!).toISOString() : undefined,
  image: resolvedHero,
  author: author ? { '@type': 'Person', name: author } : undefined,
  mainEntityOfPage: canonicalUrl ? { '@type': 'WebPage', '@id': canonicalUrl } : undefined,
};

const breadcrumbLd = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: breadcrumb.map((b, i) => ({
    '@type': 'ListItem',
    position: i + 1,
    name: b.name,
    item: b.item,
  })),
};
---

<Layout title={title}>
  <section class="pt-28 md:pt-36">
    <Container size="wide">
      <div class="max-w-3xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-extrabold tracking-tight text-heading-1">{title}</h1>
        {description && (
          <SubTitle className="mt-4 text-heading-3">{description}</SubTitle>
        )}
        {(pubDate || updatedDate) && (
          <div class="mt-3 text-sm opacity-70 text-heading-3">
            {pubDate && <span>Publicado: {new Date(pubDate).toLocaleDateString()}</span>}
            {pubDate && updatedDate && <span> Â· </span>}
            {updatedDate && <span>Actualizado: {new Date(updatedDate).toLocaleDateString()}</span>}
          </div>
        )}
        <nav aria-label="Breadcrumb" class="mt-4 text-sm text-heading-3 opacity-80 flex justify-center gap-2">
          <a href="/" class="hover:text-primary">Inicio</a>
          <span>/</span>
          <a href="/blog" class="hover:text-primary">Blog</a>
          <span>/</span>
          <span class="text-heading-2">{title}</span>
        </nav>
      </div>
      {heroImage && (
        <div class="max-w-5xl mx-auto mt-8 rounded-2xl overflow-hidden shadow-md">
          <img src={heroImage} alt={title} class="w-full h-auto object-cover" />
        </div>
      )}
    </Container>
  </section>

  <section class="py-12 md:py-16">
    <Container size="wide">
      <article class="prose max-w-3xl mx-auto prose-headings:font-bold prose-p:leading-relaxed prose-img:rounded-xl dark:prose-invert">
        <slot />
      </article>
    </Container>
  </section>

  <script type="application/ld+json" set:html={JSON.stringify(articleLd)} />
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbLd)} />
</Layout>
